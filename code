// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract AssertionDemo {
    uint256 public balance;

    function deposit(uint256 amount) public {
        // Use require() to check for valid deposit amount
        require(amount > 0, "Amount must be greater than zero");

        // Use assert() to ensure no integer overflow occurs
        uint256 newBalance = balance + amount;
        assert(newBalance >= balance);

        // Perform the deposit
        balance = newBalance;
    }

    function withdraw(uint256 amount) public {
        // Use require() to check if the contract has enough balance for withdrawal
        require(amount <= balance, "Insufficient balance");

        // Use revert() to revert the transaction if the withdrawal amount is negative
        if (amount < 0) {
            revert("Invalid withdrawal amount");
        }

        // Perform the withdrawal
        balance -= amount;
    }
}
